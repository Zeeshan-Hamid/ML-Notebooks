# -*- coding: utf-8 -*-
"""5- Support Vector Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mbrt5QA6Oc_dvQXfmJg5fynmdRb3_6T7
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:-1].values
Y = dataset.iloc[:, -1].values
print(X)

print(Y)

"""### Reshape Y into 2D array"""

Y =Y.reshape(len(Y), 1) #1st parameter is the no. of rows and the second parameter is the number of columns

"""Y was reshaped above so that the shape of X and Y is same bcz we need to transform both of them"""

print(Y)

"""## Feature scaling"""

from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_Y = StandardScaler()
X = sc_X.fit_transform(X)
print(X)
Y = sc_Y.fit_transform(Y)
print(Y)

"""## Training SVR model"""

from sklearn.svm import SVR
regressor = SVR(kernel = 'rbf')
regressor.fit(X, Y)

"""## Predicting a new result"""

sc_Y.inverse_transform(regressor.predict(sc_X.transform([[6]])).reshape(-1, 1))

"""## Plotting the graph"""

plt.scatter(sc_X.inverse_transform(X), sc_Y.inverse_transform(Y), color = "red")
plt.plot(sc_X.inverse_transform(X), sc_Y.inverse_transform(regressor.predict(X).reshape(-1, 1)), color = 'blue')
plt.title("Graph for SVR")
plt.xlabel("Position")
plt.ylabel("Salary")
plt.show()

X_grid = np.arange(min(sc_X.inverse_transform(X)), max(sc_X.inverse_transform(X)), 0.1)
X_grid = X_grid.reshape((len(X_grid)), 1)
plt.scatter(sc_X.inverse_transform(X), sc_Y.inverse_transform(Y), color = "red")
plt.plot(X_grid, sc_Y.inverse_transform(regressor.predict(sc_X.transform(X_grid)).reshape(-1, 1)), color = 'blue')
plt.title("Graph for SVR")
plt.xlabel("Position")
plt.ylabel("Salary")
plt.show()